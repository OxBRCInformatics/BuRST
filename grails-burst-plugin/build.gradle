buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
    }
}

apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleVersion
}

license {
    header project.file('LICENSE')
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies:$grailsVersion"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    testCompile "org.grails.plugins:hibernate5:$gormVersion"
}


assets {
    packagePlugin = true
}

List excludedFiles = [
        "**/ox/softeng/burst/grails/plugin/test/**"
]

jar {
    excludedFiles.each {
        exclude it
    }
}

sourcesJar {
    excludedFiles.each {
        exclude it
    }
}

javadocJar {
    excludedFiles.each {
        exclude it
    }
}

grailsPublish {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    userOrg = 'oxbrcinformatics'
    repo = 'maven'

    license {
        name = 'Apache-2.0'
    }
    githubSlug = 'OxBRCInformatics/BuRST'
    title = "Grails Burst Plugin"
    developers = [olliefreeman:"Oliver Freeman"]
}